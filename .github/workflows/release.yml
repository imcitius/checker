name: Go

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: "checker"

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -ldflags "-X my/checker/config.Version=${{ env.GITHUB_REF_NAME }} -X my/checker/config.VersionSHA=${{ env.GITHUB_SHA }} -X my/checker/config.VersionBuild=${{ env.GITHUB_RUN_ID }}" -o ${{ env.BINARY_NAME }}

      - name: Compress binary
        run: tar -czvf ${{ env.BINARY_NAME }}-${{ env.GITHUB_REF_NAME }}-linux-amd64.tgz -C build ${{ env.BINARY_NAME }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BINARY_NAME }}
          path: ${{ env.BINARY_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          repository: ${{ secrets.REGISTRY_LOGIN }}/checker
          tag_with_ref: true
          tag_with_sha: true

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.BINARY_NAME }}-${{ env.VERSION }}-linux-amd64.tgz
          asset_name: ${{ env.BINARY_NAME }}-${{ env.VERSION }}-linux-amd64.tgz
          tag: ${{ github.ref }}
          overwrite: true
          body: "Checker release ${{ env.VERSION  }}"
        env:
          BINARY_NAME: "checker"

      - name: Deploy to fly-log-shipper.io
        uses: superfly/flyctl-actions@1.1
        with:
          args: "deploy --dockerfile docs/build/Dockerfile"
