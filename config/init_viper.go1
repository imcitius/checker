package config

import (
	"fmt"
	"github.com/creasty/defaults"
	"github.com/davecgh/go-spew/spew"
	"github.com/spf13/viper"
)

func initViper(cfgFile string) func() {
	return func() {
		if cfgFile != "" {
			viper.SetConfigFile(cfgFile)
		}

		viper.AutomaticEnv()

		err := viper.ReadInConfig()
		if err != nil {
			if _, ok := err.(viper.ConfigFileNotFoundError); ok {
				fmt.Printf("Config file not found at path %s\n", cfgFile)
			} else {
				panic(fmt.Errorf("Error: uncaught error! %s", err))
			}
		} else {
			Log.Infof("Using c file %s\n", viper.ConfigFileUsed())
		}

		if err := defaults.Set(&Config.Defaults); err != nil {
			panic(err)
		}

		err = viper.Unmarshal(&Config)

		spew.Dump(Config)
		Log.Fatal()

		//
		//if viper.IsSet("defaults") { // TODO does not work properly, need to investigate
		//	err = viper.Sub("defaults").Unmarshal(&Defaults)
		//	if err != nil {
		//		Log.Fatalf("unable to decode Defaults into struct, %v", err)
		//	}
		//}
		//Log.Fatalf("Defaults: %v", viper.Get("defaults"))
	}
}