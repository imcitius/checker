.variables-harbor: &variables-harbor
  BUILD_ENV: harbor
  BUILD_REGISTRY: harbor-ks.jgit.me
  WERF_ALLOW_GIT_SHALLOW_CLONE: "true"
  WERF_PARALLEL: "true"
  WERF_REPO_CONTAINER_REGISTRY: harbor
  KUBECONFIG: kubeconfig.json
  WERF_IMAGES_REPO_DOCKER_HUB_USERNAME: gitlab-uploader

.variables-local-master: &variables-local-master
  BUILD_LIBRARY: library/checker

.variables-local-tags: &variables-local-tags
  BUILD_LIBRARY: releases/checker

.prepare: &prepare
  before_script:
    - export BUILD_REPO=${BUILD_REGISTRY}/${BUILD_LIBRARY}
    - export WERF_REPO=${BUILD_REPO}
    - export WERF_IMAGES_REPO_DOCKER_HUB_PASSWORD=$(vault read -field=token secret/${BUILD_ENV}/${WERF_IMAGES_REPO_DOCKER_HUB_USERNAME})
    - docker login ${WERF_REPO} -u ${WERF_IMAGES_REPO_DOCKER_HUB_USERNAME} -p ${WERF_IMAGES_REPO_DOCKER_HUB_PASSWORD}
    - type trdl && . $(trdl use werf 1.2 ea)
    - type werf && source $(werf ci-env gitlab --as-file)

master harbor-local:
  stage: build
  <<: *prepare
  variables:
    <<: *variables-local-master
    <<: *variables-harbor
  script:
    - werf build --report-path=images-report.json
  artifacts:
    paths:
      - images-report.json
    expire_in: 1 week
  extends:
    - .docker_europe_tags
  only:
    - main

tags harbor-local:
  stage: build
  <<: *prepare
  variables:
    <<: *variables-local-tags
    <<: *variables-harbor
  script:
    - werf build --report-path=images-report.json
  artifacts:
    paths:
      - images-report.json
    expire_in: 1 week
  extends:
    - .docker_europe_tags
  only:
    - tags
