.inst-run: &inst-run |
  curl -X POST \
    http://${INST_API}.service.${INST_DC}.consul/instances \
    -H 'Content-Type: application/json' \
    -d '{
      "name": "'${ENV}'",
      "project_name": "'${SERVICE}'",
      "auto_deploy": true,
      "datacenters": ["'${INST_DC}'"],
      "deploy_repository_url": "git::ssh://git@jgit.me/infrastructure/nomad/'${NOMAD_PROJECT}'.git//'${CI_PROJECT_NAME}'",
      "overwrite": true,
      "params": {
          "version": "'${VERSION}'",
          "env": "'${ENV}'",
          "backend_uri": "'${BACK_URI}'",
          "registry_host": "'${REGISTRY_HOST}'",
          "registry_repo": "'${REGISTRY_REPO}'"
      }
  }'

.deploy to instantiator: &deploy_to_instantiator
  stage: deploy
  before_script:
    ##### image name here                                     ++++
    - export VERSION=$(cat images-report.json | jq -r .Images.stat.DockerImageName)
  script:
    - set -x
    # - *generate_version
    - *inst-run
  extends:
    - .docker_europe_tags
    - .vars

prod instance:
  environment:
    name: ks1-prod
  extends:
    - .deploy to instantiator
    - .docker_europe_tags
  variables:
    CONSUL_PATH: configs/ks-1/checker/config
  only:
    - tags

stage instance ks1:
  environment:
    name: stage
  extends:
    - .deploy to instantiator
    - .docker_europe_tags
  variables:
    CONSUL_PATH: configs/ks-1/checker/testconfig
  only:
    refs:
      - jgit
